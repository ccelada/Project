summary <- summary[order(firstdate, decreasing = FALSE)]
summary <- as.data.frame(summary)
manipulate(
ggplot(summary, aes_string(x="firstdate",y=var[1])) +
geom_line(colour="blue") +
labs(x="", y=var[2]), ##y=names(summary)[as.numeric(column)]),
var = picker("Average" = c("x.mean", "Average Exchange Rate in Month"),
"Maximum" = c("x.max","Max Exchange Rate in Month"),
"Minimum" = c("x.min","Min Exchange Rate in Month"),
"Opening" = c("opening", "Exchange Rate for First Day of Month"),
"Closing" = c("closing", "Exchange Rate for Last Day of Month"),
label="Summarize by")
)
manipulate(
ggplot(summary, aes_string(x="firstdate",y=var[1])) +
geom_line(colour="blue") +
labs(x="", y=var[2]), ##y=names(summary)[as.numeric(column)]),
var = picker("Average" = c("x.mean", "Average Exchange Rate in Month"),
"Maximum" = c("x.max","Max Exchange Rate in Month"),
"Minimum" = c("x.min","Min Exchange Rate in Month"),
"Opening" = c("opening", "Exchange Rate for First Day of Month"),
"Closing" = c("closing", "Exchange Rate for Last Day of Month"),
label="Summarize by")
)
library(RCurl)
library(XML)
library(manipulate)
library(ggplot2)
library(scales)
library(lubridate)
library(data.table)
## SOAP request Header Fields
headerFields <- c('Content-Type' = "text/xml; charset=utf-8",
SOAPAction = "http://www.banguat.gob.gt/variables/ws/TipoCambioFechaInicial")
## SOAP request Body
body <- '<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
<soap:Body>
<TipoCambioFechaInicial xmlns="http://www.banguat.gob.gt/variables/ws/">
<fechainit>01/01/2000</fechainit>
</TipoCambioFechaInicial>
</soap:Body>
</soap:Envelope>'
reader=basicTextGatherer()
curlPerform(url="http://www.banguat.gob.gt/variables/ws/TipoCambio.asmx",
httpheader = headerFields,
postfields=body,
writefunction=reader$update)
returnedhtml <- reader$value()
xmldata <- xmlParse(returnedhtml, asText=TRUE)
rootNode <- xmlRoot(xmldata)
records <- as.numeric(xmlSApply(rootNode[[1]][[1]][[1]],xmlValue)[2])
xrate <- data.frame(date=rep("",records),sell=rep(NA,records),buy=rep(NA,records),xRate=rep(NA,records),stringsAsFactors=FALSE)
for(i in 1:records){
xrate[i,1:3] <- xmlSApply(rootNode[[1]][[1]][[1]][[1]][[i]],xmlValue)[-1]
}
xrate[,2] <- as.numeric(xrate[,2])
xrate[,3] <- as.numeric(xrate[,3])
xrate[,4] <- (xrate[,2]+xrate[,3])/2
xrate$date <- dmy(xrate$date)
xrate$year <- as.factor(year(xrate$date))
xrate$date2 <- ymd(paste0("2000",substr(as.character(xrate$date),5,10)))
manipulate(
ggplot(xrate[as.numeric(as.character(xrate$year)) %in% c(2000:2014)[c(cb00, cb01, cb02, cb03, cb04, cb05, cb06, cb07, cb08, cb09, cb10, cb11, cb12, cb13, cb14)],], aes(date2, xRate, group=year)) +
geom_line(aes(colour=year)) + scale_colour_hue(l=45) +
labs(x="", y="Tipo de Cambio, Q/US$") +
scale_x_datetime(labels = date_format("%b"), breaks = date_breaks("months")),
cb00 = checkbox(FALSE, "2000"),
cb01 = checkbox(FALSE, "2001"),
cb02 = checkbox(FALSE, "2002"),
cb03 = checkbox(FALSE, "2003"),
cb04 = checkbox(FALSE, "2004"),
cb05 = checkbox(FALSE, "2005"),
cb06 = checkbox(FALSE, "2006"),
cb07 = checkbox(FALSE, "2007"),
cb08 = checkbox(FALSE, "2008"),
cb09 = checkbox(FALSE, "2009"),
cb10 = checkbox(FALSE, "2010"),
cb11 = checkbox(TRUE, "2011"),
cb12 = checkbox(TRUE, "2012"),
cb13 = checkbox(TRUE, "2013"),
cb14 = checkbox(TRUE, "2014")
)
xrate[seq(records-5,records),c(1,4)]
xrate$ym <- paste0(lubridate::year(xrate$date),lubridate::month(xrate$date,label=TRUE, abbr=TRUE))
x.rate <- data.table(xrate)
summary1 <- x.rate[,list(mean(xRate), max(xRate), min(xRate)), by=ym]
setnames(summary1, c("ym", "x.mean", "x.max", "x.min"))
summary2 <- x.rate[,.SD[1,date, xRate], by=ym]
setnames(summary2, c("ym", "opening", "firstdate"))
summary3 <- x.rate[,.SD[.N,date, xRate], by=ym]
setnames(summary3, c("ym", "closing", "lastdate"))
summary <- merge(summary1, summary2, by="ym")
summary <- merge(summary, summary3, by="ym")
summary <- summary[order(firstdate, decreasing = FALSE)]
manipulate(
ggplot(summary, aes_string(x="firstdate",y=var[1])) +
geom_line(colour="blue") +
labs(x="", y=var[2]), ##y=names(summary)[as.numeric(column)]),
var = picker("Average" = c("x.mean", "Average Exchange Rate in Month"),
"Maximum" = c("x.max","Max Exchange Rate in Month"),
"Minimum" = c("x.min","Min Exchange Rate in Month"),
"Opening" = c("opening", "Exchange Rate for First Day of Month"),
"Closing" = c("closing", "Exchange Rate for Last Day of Month"),
label="Summarize by")
)
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
summaryylabs <- data.frame(var = c("x.mean", "x.max", "x.min", "opening", "closing"), titles=c("Average Exchange Rate in Month", "Max Exchange Rate in Month", "Min Exchange Rate in Month", "Exchange Rate for First Day of Month", "Exchange Rate for Last Day of Month"))
View(summaryylabs)
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
shiny::runApp('ownCloud/Developing Data Products/Project')
View(x.rate)
sum(x.rate$sell <> x.rate$buy)
sum(x.rate$sell != x.rate$buy)
max(x.rate$date[x.rate$sell != x.rate$buy])
min(x.rate$date[x.rate$sell == x.rate$buy])
class(min(x.rate$date[x.rate$sell == x.rate$buy]))
rm(returnedhtml)
shiny::runApp('ownCloud/Developing Data Products/Project')
rnorm(1000)
?diff
library(RCurl)
library(XML)
library(manipulate)
library(ggplot2)
library(scales)
library(lubridate)
library(data.table)
## SOAP request Header Fields
headerFields <- c('Content-Type' = "text/xml; charset=utf-8",
SOAPAction = "http://www.banguat.gob.gt/variables/ws/TipoCambioFechaInicial")
## SOAP request Body
body <- '<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
<soap:Body>
<TipoCambioFechaInicial xmlns="http://www.banguat.gob.gt/variables/ws/">
<fechainit>01/01/2000</fechainit>
</TipoCambioFechaInicial>
</soap:Body>
</soap:Envelope>'
reader=basicTextGatherer()
curlPerform(url="http://www.banguat.gob.gt/variables/ws/TipoCambio.asmx",
httpheader = headerFields,
postfields=body,
writefunction=reader$update)
xmldata <- xmlParse(reader$value(), asText=TRUE)
rootNode <- xmlRoot(xmldata)
records <- as.numeric(xmlSApply(rootNode[[1]][[1]][[1]],xmlValue)[2])
xrate <- data.frame(date=rep("",records),sell=rep(NA,records),buy=rep(NA,records),xRate=rep(NA,records),stringsAsFactors=FALSE)
for(i in 1:records){
xrate[i,1:3] <- xmlSApply(rootNode[[1]][[1]][[1]][[1]][[i]],xmlValue)[-1]
}
xrate[,2] <- as.numeric(xrate[,2])
xrate[,3] <- as.numeric(xrate[,3])
xrate[,4] <- (xrate[,2]+xrate[,3])/2
xrate$date <- dmy(xrate$date)
xrate$year <- as.factor(year(xrate$date))
xrate$date2 <- ymd(paste0("2000",substr(as.character(xrate$date),5,10)))
manipulate(
ggplot(xrate[as.numeric(as.character(xrate$year)) %in% c(2000:2014)[c(cb00, cb01, cb02, cb03, cb04, cb05, cb06, cb07, cb08, cb09, cb10, cb11, cb12, cb13, cb14)],], aes(date2, xRate, group=year)) +
geom_line(aes(colour=year)) + scale_colour_hue(l=45) +
labs(x="", y="Tipo de Cambio, Q/US$") +
scale_x_datetime(labels = date_format("%b"), breaks = date_breaks("months")),
cb00 = checkbox(FALSE, "2000"),
cb01 = checkbox(FALSE, "2001"),
cb02 = checkbox(FALSE, "2002"),
cb03 = checkbox(FALSE, "2003"),
cb04 = checkbox(FALSE, "2004"),
cb05 = checkbox(FALSE, "2005"),
cb06 = checkbox(FALSE, "2006"),
cb07 = checkbox(FALSE, "2007"),
cb08 = checkbox(FALSE, "2008"),
cb09 = checkbox(FALSE, "2009"),
cb10 = checkbox(FALSE, "2010"),
cb11 = checkbox(TRUE, "2011"),
cb12 = checkbox(TRUE, "2012"),
cb13 = checkbox(TRUE, "2013"),
cb14 = checkbox(TRUE, "2014")
)
xrate[seq(records-5,records),c(1,4)]
xrate$ym <- paste0(lubridate::year(xrate$date),lubridate::month(xrate$date,label=TRUE, abbr=TRUE))
x.rate <- data.table(xrate)
summary1 <- x.rate[,list(mean(xRate), max(xRate), min(xRate)), by=ym]
setnames(summary1, c("ym", "x.mean", "x.max", "x.min"))
summary2 <- x.rate[,.SD[1,date, xRate], by=ym]
setnames(summary2, c("ym", "opening", "firstdate"))
summary3 <- x.rate[,.SD[.N,date, xRate], by=ym]
setnames(summary3, c("ym", "closing", "lastdate"))
summary <- merge(summary1, summary2, by="ym")
summary <- merge(summary, summary3, by="ym")
summary <- summary[order(firstdate, decreasing = FALSE)]
a <- diff(summary$x.mean)
hist(a)
b <- diff(xrate$xRate)
hist(b)
hist(b, prob=TRUE)
x <- seq(-..2, .2, length=100)
y <- dnorm(x, mean(b), sd(b))
x <- seq(-.2, .2, length=100)
y <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
hist(b, prob=TRUE, ylim=c(0,60))
x <- seq(-.2, .2, length=100)
y <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
hist(b, prob=TRUE, ylim=c(0,50))
x <- seq(-.2, .2, length=100)
y <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
hist(b, prob=TRUE, ylim=c(0,45))
x <- seq(-.2, .2, length=100)
y <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
lines(density(b), col="red")
hist(b, prob=TRUE, ylim=c(0,60))
x <- seq(-.2, .2, length=100)
y <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
lines(density(b), col="red")
hist(b, prob=TRUE, ylim=c(0,80))
x <- seq(-.2, .2, length=100)
y <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
lines(density(b), col="red")
hist(b, prob=TRUE, ylim=c(0,90))
x <- seq(-.2, .2, length=100)
y <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
lines(density(b), col="red")
hist(b, prob=TRUE, ylim=c(0,100))
x <- seq(-.2, .2, length=100)
y <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
lines(density(b), col="red")
hist(b, prob=TRUE, ylim=c(0,120))
x <- seq(-.2, .2, length=100)
y <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
lines(density(b), col="red")
hist(b, prob=TRUE, ylim=c(0,200))
x <- seq(-.2, .2, length=100)
y <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
lines(density(b), col="red")
a <- diff(summary$x.mean)
hist(a)
a <- diff(summary$x.mean)
hist(a, prob=TRUE)
a <- diff(summary$x.mean)
hist(a, prob=TRUE, ylim=c(0,15))
xa <- seq(-.25, .25, length=100)
a <- diff(summary$x.mean)
hist(a, prob=TRUE, ylim=c(0,10))
xa <- seq(-.25, .25, length=100)
a <- diff(summary$x.mean)
hist(a, prob=TRUE, ylim=c(0,10))
xa <- seq(-.25, .25, length=100)
yb <- dnorm(x, mean(a), sd(a))
lines(x,y, col="blue")
lines(density(a), col="red")
a <- diff(summary$x.mean)
hist(a, prob=TRUE, ylim=c(0,40))
xa <- seq(-.25, .25, length=100)
yb <- dnorm(x, mean(a), sd(a))
lines(x,y, col="blue")
lines(density(a), col="red")
yb <- dt(x, mean(a), sd(a))
lines(x,y, col="blue")
a <- diff(summary$x.mean)
hist(a, prob=TRUE, ylim=c(0,40))
xa <- seq(-.25, .25, length=100)
yb <- dnorm(x, mean(a), sd(a))
lines(x,y, col="blue")
lines(density(a), col="red")
library(RCurl)
library(XML)
library(manipulate)
library(ggplot2)
library(scales)
library(lubridate)
library(data.table)
## SOAP request Header Fields
headerFields <- c('Content-Type' = "text/xml; charset=utf-8",
SOAPAction = "http://www.banguat.gob.gt/variables/ws/TipoCambioFechaInicial")
## SOAP request Body
body <- '<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
<soap:Body>
<TipoCambioFechaInicial xmlns="http://www.banguat.gob.gt/variables/ws/">
<fechainit>01/01/1990</fechainit>
</TipoCambioFechaInicial>
</soap:Body>
</soap:Envelope>'
reader=basicTextGatherer()
curlPerform(url="http://www.banguat.gob.gt/variables/ws/TipoCambio.asmx",
httpheader = headerFields,
postfields=body,
writefunction=reader$update)
xmldata <- xmlParse(reader$value(), asText=TRUE)
rootNode <- xmlRoot(xmldata)
records <- as.numeric(xmlSApply(rootNode[[1]][[1]][[1]],xmlValue)[2])
xrate <- data.frame(date=rep("",records),sell=rep(NA,records),buy=rep(NA,records),xRate=rep(NA,records),stringsAsFactors=FALSE)
for(i in 1:records){
xrate[i,1:3] <- xmlSApply(rootNode[[1]][[1]][[1]][[1]][[i]],xmlValue)[-1]
}
xrate[,2] <- as.numeric(xrate[,2])
xrate[,3] <- as.numeric(xrate[,3])
xrate[,4] <- (xrate[,2]+xrate[,3])/2
xrate$date <- dmy(xrate$date)
xrate$year <- as.factor(year(xrate$date))
xrate$date2 <- ymd(paste0("2000",substr(as.character(xrate$date),5,10)))
manipulate(
ggplot(xrate[as.numeric(as.character(xrate$year)) %in% c(2000:2014)[c(cb00, cb01, cb02, cb03, cb04, cb05, cb06, cb07, cb08, cb09, cb10, cb11, cb12, cb13, cb14)],], aes(date2, xRate, group=year)) +
geom_line(aes(colour=year)) + scale_colour_hue(l=45) +
labs(x="", y="Tipo de Cambio, Q/US$") +
scale_x_datetime(labels = date_format("%b"), breaks = date_breaks("months")),
cb00 = checkbox(FALSE, "2000"),
cb01 = checkbox(FALSE, "2001"),
cb02 = checkbox(FALSE, "2002"),
cb03 = checkbox(FALSE, "2003"),
cb04 = checkbox(FALSE, "2004"),
cb05 = checkbox(FALSE, "2005"),
cb06 = checkbox(FALSE, "2006"),
cb07 = checkbox(FALSE, "2007"),
cb08 = checkbox(FALSE, "2008"),
cb09 = checkbox(FALSE, "2009"),
cb10 = checkbox(FALSE, "2010"),
cb11 = checkbox(TRUE, "2011"),
cb12 = checkbox(TRUE, "2012"),
cb13 = checkbox(TRUE, "2013"),
cb14 = checkbox(TRUE, "2014")
)
xrate[seq(records-5,records),c(1,4)]
xrate$ym <- paste0(lubridate::year(xrate$date),lubridate::month(xrate$date,label=TRUE, abbr=TRUE))
x.rate <- data.table(xrate)
summary1 <- x.rate[,list(mean(xRate), max(xRate), min(xRate)), by=ym]
setnames(summary1, c("ym", "x.mean", "x.max", "x.min"))
summary2 <- x.rate[,.SD[1,date, xRate], by=ym]
setnames(summary2, c("ym", "opening", "firstdate"))
summary3 <- x.rate[,.SD[.N,date, xRate], by=ym]
setnames(summary3, c("ym", "closing", "lastdate"))
summary <- merge(summary1, summary2, by="ym")
summary <- merge(summary, summary3, by="ym")
summary <- summary[order(firstdate, decreasing = FALSE)]
manipulate(
ggplot(summary, aes_string(x="firstdate",y=var[1])) +
geom_line(colour="blue") +
labs(x="", y=var[2]), ##y=names(summary)[as.numeric(column)]),
var = picker("Average" = c("x.mean", "Average Exchange Rate in Month"),
"Maximum" = c("x.max","Max Exchange Rate in Month"),
"Minimum" = c("x.min","Min Exchange Rate in Month"),
"Opening" = c("opening", "Exchange Rate for First Day of Month"),
"Closing" = c("closing", "Exchange Rate for Last Day of Month"),
label="Summarize by")
)
a <- diff(summary$x.mean)
hist(a, prob=TRUE, ylim=c(0,40))
xa <- seq(-.25, .25, length=100)
yb <- dnorm(x, mean(a), sd(a))
lines(x,y, col="blue")
lines(density(a), col="red")
b <- diff(xrate$xRate)
hist(b, prob=TRUE, ylim=c(0,200))
xb <- seq(-.2, .2, length=100)
yb <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
lines(density(b), col="red")
b <- diff(xrate$xRate)
hist(b, prob=TRUE, ylim=c(0,200))
xb <- seq(-.2, .2, length=50)
yb <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
lines(density(b), col="red")
b <- diff(xrate$xRate)
hist(b, prob=TRUE, ylim=c(0,50))
xb <- seq(-.2, .2, length=1000)
yb <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
lines(density(b), col="red")
b <- diff(xrate$xRate)
hist(b, prob=TRUE, ylim=c(0,40))
xb <- seq(-.2, .2, length=1000)
yb <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
lines(density(b), col="red")
library(RCurl)
library(XML)
library(manipulate)
library(ggplot2)
library(scales)
library(lubridate)
library(data.table)
## SOAP request Header Fields
headerFields <- c('Content-Type' = "text/xml; charset=utf-8",
SOAPAction = "http://www.banguat.gob.gt/variables/ws/TipoCambioFechaInicial")
## SOAP request Body
body <- '<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
<soap:Body>
<TipoCambioFechaInicial xmlns="http://www.banguat.gob.gt/variables/ws/">
<fechainit>01/01/2000</fechainit>
</TipoCambioFechaInicial>
</soap:Body>
</soap:Envelope>'
reader=basicTextGatherer()
curlPerform(url="http://www.banguat.gob.gt/variables/ws/TipoCambio.asmx",
httpheader = headerFields,
postfields=body,
writefunction=reader$update)
xmldata <- xmlParse(reader$value(), asText=TRUE)
rootNode <- xmlRoot(xmldata)
records <- as.numeric(xmlSApply(rootNode[[1]][[1]][[1]],xmlValue)[2])
xrate <- data.frame(date=rep("",records),sell=rep(NA,records),buy=rep(NA,records),xRate=rep(NA,records),stringsAsFactors=FALSE)
for(i in 1:records){
xrate[i,1:3] <- xmlSApply(rootNode[[1]][[1]][[1]][[1]][[i]],xmlValue)[-1]
}
xrate[,2] <- as.numeric(xrate[,2])
xrate[,3] <- as.numeric(xrate[,3])
xrate[,4] <- (xrate[,2]+xrate[,3])/2
xrate$date <- dmy(xrate$date)
xrate$year <- as.factor(year(xrate$date))
xrate$date2 <- ymd(paste0("2000",substr(as.character(xrate$date),5,10)))
manipulate(
ggplot(xrate[as.numeric(as.character(xrate$year)) %in% c(2000:2014)[c(cb00, cb01, cb02, cb03, cb04, cb05, cb06, cb07, cb08, cb09, cb10, cb11, cb12, cb13, cb14)],], aes(date2, xRate, group=year)) +
geom_line(aes(colour=year)) + scale_colour_hue(l=45) +
labs(x="", y="Tipo de Cambio, Q/US$") +
scale_x_datetime(labels = date_format("%b"), breaks = date_breaks("months")),
cb00 = checkbox(FALSE, "2000"),
cb01 = checkbox(FALSE, "2001"),
cb02 = checkbox(FALSE, "2002"),
cb03 = checkbox(FALSE, "2003"),
cb04 = checkbox(FALSE, "2004"),
cb05 = checkbox(FALSE, "2005"),
cb06 = checkbox(FALSE, "2006"),
cb07 = checkbox(FALSE, "2007"),
cb08 = checkbox(FALSE, "2008"),
cb09 = checkbox(FALSE, "2009"),
cb10 = checkbox(FALSE, "2010"),
cb11 = checkbox(TRUE, "2011"),
cb12 = checkbox(TRUE, "2012"),
cb13 = checkbox(TRUE, "2013"),
cb14 = checkbox(TRUE, "2014")
)
xrate[seq(records-5,records),c(1,4)]
xrate$ym <- paste0(lubridate::year(xrate$date),lubridate::month(xrate$date,label=TRUE, abbr=TRUE))
x.rate <- data.table(xrate)
summary1 <- x.rate[,list(mean(xRate), max(xRate), min(xRate)), by=ym]
setnames(summary1, c("ym", "x.mean", "x.max", "x.min"))
summary2 <- x.rate[,.SD[1,date, xRate], by=ym]
setnames(summary2, c("ym", "opening", "firstdate"))
summary3 <- x.rate[,.SD[.N,date, xRate], by=ym]
setnames(summary3, c("ym", "closing", "lastdate"))
summary <- merge(summary1, summary2, by="ym")
summary <- merge(summary, summary3, by="ym")
summary <- summary[order(firstdate, decreasing = FALSE)]
manipulate(
ggplot(summary, aes_string(x="firstdate",y=var[1])) +
geom_line(colour="blue") +
labs(x="", y=var[2]), ##y=names(summary)[as.numeric(column)]),
var = picker("Average" = c("x.mean", "Average Exchange Rate in Month"),
"Maximum" = c("x.max","Max Exchange Rate in Month"),
"Minimum" = c("x.min","Min Exchange Rate in Month"),
"Opening" = c("opening", "Exchange Rate for First Day of Month"),
"Closing" = c("closing", "Exchange Rate for Last Day of Month"),
label="Summarize by")
)
a <- diff(summary$x.mean)
hist(a, prob=TRUE, ylim=c(0,40))
xa <- seq(-.25, .25, length=100)
yb <- dnorm(x, mean(a), sd(a))
lines(x,y, col="blue")
lines(density(a), col="red")
b <- diff(xrate$xRate)
hist(b, prob=TRUE, ylim=c(0,40))
xb <- seq(-.2, .2, length=1000)
yb <- dnorm(x, mean(b), sd(b))
lines(x,y,col="blue")
lines(density(b), col="red")
install.packages("ts")
?ts
setwd("~/ownCloud/Developing Data Products/Project")
shinyapps::deployApp()
shinyapps::deployApp()
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
?author
author("xRate")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
